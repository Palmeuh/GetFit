@model GetFit.Infrastructure.SearchSortFilter.PaginatedList<GetFit.Domain.Models.Workout>

@{
    ViewData["Title"] = "Index";
}



<section id="excerciseIntro">
    <h1>Index</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-primary" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Description</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NumberOfExcercisesSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Excercises</a>
                </th>
            </tr>
        </thead>
        
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @{ 
                            int excerciseCount = item.Excercises.Count();
                        }
                        @Html.DisplayFor(modelItem => excerciseCount)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</section>
