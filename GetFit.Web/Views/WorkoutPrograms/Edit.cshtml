@model GetFit.Domain.Models.WorkoutProgram

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>WorkoutProgram</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<table class="table">
    <a asp-action="AddWorkoutsToProgram" asp-route-objectId="@Model.Id">Add or remove excercises</a>
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Description</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NumberOfWorkoutsSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Workouts</a>
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.Workouts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @{
                        int workoutCount = item.Excercises.Count;
                    }
                    @Html.DisplayFor(item => workoutCount)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                   
                </td>
            </tr>
        }
    </tbody>
</table>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
