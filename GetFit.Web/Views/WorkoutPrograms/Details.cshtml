@model GetFit.Domain.Models.WorkoutProgram

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>WorkoutProgram</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Description</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NumberOfWorkoutsSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Workouts</a>
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.Workouts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @{
                        int workoutCount = item.Excercises.Count;
                    }
                    @Html.DisplayFor(item => workoutCount)
                </td>
               
            </tr>
        }
    </tbody>
</table>
